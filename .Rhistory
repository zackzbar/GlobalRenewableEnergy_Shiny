clean %>% filter(., Year==2015) %>%
arrange(., desc(Share.Output)) %>%
head(10) %>%
plot_ly(., labels=~Income.Group, values=~Share.Output, type='pie')
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean$Country[clean$Code=="RUS", ]# = "Russia"
clean[clean$Code=="RUS", ]# = "Russia"
## 3. REGIONAL HISTOGRAM
region_hist = clean %>% filter(., Year==2015, Region=='Latin America & Caribbean') %>%
ggplot(., aes(x=Share.Consumption)) +
geom_histogram(bins=8) +
theme_bw()
ggplotly(region_hist)
## 3.2 REGIONAL MAPS!!
region_map = clean %>% filter(., Year==2015, Region=='Latin America & Caribbean') %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800, region='005'))
plot(region_map)
## 13. TOP% INCOME PIE
clean %>% filter(., Year==2015) %>%
arrange(., desc(Share.Output)) %>%
head(10) %>%
plot_ly(., labels=~Income.Group, values=~Share.Output, type='pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Share.Output, ' billions'))
## 13. TOP% INCOME PIE
clean %>% filter(., Year==2015) %>%
arrange(., desc(Share.Output)) %>%
head(10) %>%
plot_ly(., labels=~Income.Group, values=~Share.Output, type='pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('$', Share.Output, ' billions'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
clean[clean$Code=="RUS", ]# = "Russia"
clean %>% filter(., Code=="RUS") %>% mutate(., Country="Russia")
clean[clean$Code=="RUS", ] = clean %>% filter(., Code=="RUS") %>% mutate(., Country="Russia")
clean[clean$Code=="RUS", ] = clean %>% filter(., Code=="RUS") %>% mutate(., Country=as.factor("Russia"))
clean$Country = as.character(clean$Country)
clean[clean$Code=="RUS", ] = clean %>% filter(., Code=="RUS") %>% mutate(., Country="Russia")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="VEN", ] = clean %>% filter(., Code=="VEN") %>% mutate(., Country="Venezuela")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="EGY", ] = clean %>% filter(., Code=="EGY") %>% mutate(., Country="Egypt")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="CIV", ] = clean %>% filter(., Code=="CIV") %>% mutate(., Country="CÃ´te d'Ivoire")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="CIV", ] = clean %>% filter(., Code=="CIV") %>% mutate(., Country="Ivory Coast")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
plot(world)
clean[clean$Code=="COD", ] = clean %>% filter(., Code=="COD") %>% mutate(., Country="Democratic Republic of Congo")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="COD", ] = clean %>% filter(., Code=="COD") %>% mutate(., Country="Democratic Republic of the Congo")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="COD", ] = clean %>% filter(., Code=="COD") %>% mutate(., Country="Congo, DR")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="IRN", ] = clean %>% filter(., Code=="IRN") %>% mutate(., Country="Iran")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="YEM", ] = clean %>% filter(., Code=="YEM") %>% mutate(., Country="Yemen")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="SYR", ] = clean %>% filter(., Code=="SYR") %>% mutate(., Country="Syria")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="KGZ", ] = clean %>% filter(., Code=="KGZ") %>% mutate(., Country="Kyrgyzstan")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="LAO", ] = clean %>% filter(., Code=="LAO") %>% mutate(., Country="Laos")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="KOR", ] = clean %>% filter(., Code=="KOR") %>% mutate(., Country="South Korea")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="PRK", ] = clean %>% filter(., Code=="PRK") %>% mutate(., Country="North Korea")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="HKG", ] = clean %>% filter(., Code=="HKG") %>% mutate(., Country="Hong Kong")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="BHS", ] = clean %>% filter(., Code=="BHS") %>% mutate(., Country="The Bahamas")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
clean[clean$Code=="BHS", ] = clean %>% filter(., Code=="BHS") %>% mutate(., Country="Bahamas")
## 15. WORLD MAP
world = clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800))
plot(world)
setwd("~/Desktop/School Stuff/NYCDSA/7. Projects/Shiny/shiny_git/data/Energy")
write.csv(clean, "clean8.csv")
## 13. TOP% INCOME PIE
clean %>% filter(., Year==2015) %>%
arrange(., desc(Share.Output)) %>%
head(10) %>%
plot_ly(., labels=~Income.Group, values=~Share.Output, type='pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(Share.Output, '%'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
## 13. TOP% INCOME PIE
clean %>% filter(., Year==2015) %>%
arrange(., desc(Share.Output)) %>%
head(10) %>%
plot_ly(., labels=~Income.Group, values=~Share.Output, type='pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(Country, '%'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
## 12. TOP% REGION PIE
clean %>% filter(., Year==2015) %>%
arrange(., desc(Share.Output)) %>%
head(10) %>%
plot_ly(., labels=~Region, values=~Share.Output, type='pie')
## 12. TOP% REGION PIE
clean %>% filter(., Year==2015) %>%
arrange(., desc(Share.Output)) %>%
head(10) %>%
plot_ly(., labels=~Region, values=~Share.Output, type='pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(Country, '%'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
## 12. TOP% REGION PIE
clean %>% filter(., Year==2015) %>%
arrange(., desc(Share.Output)) %>%
head(10) %>%
plot_ly(., labels=~Region, values=~Share.Output, type='pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(Country, 'AS AN EXAMPLE, probably nothing in here'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
## 12. TOP% REGION PIE
clean %>% filter(., Year==2015) %>%
arrange(., desc(Share.Output)) %>%
head(10) %>%
plot_ly(., labels=~Region, values=~Share.Output, type='pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(all(Country), 'AS AN EXAMPLE, probably nothing in here'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
## 12. TOP% REGION PIE
clean %>% filter(., Year==2015) %>%
arrange(., desc(Share.Output)) %>%
head(10) %>%
plot_ly(., labels=~Region, values=~Share.Output, type='pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
## 13. TOP% INCOME PIE
clean %>% filter(., Year==2015) %>%
arrange(., desc(Share.Output)) %>%
head(10) %>%
plot_ly(., labels=~Income.Group, values=~Share.Output, type='pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste(Country, 'AS AN EXAMPLE, probably nothing in here'),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
## 10. INCOME LEVEL HISTOGRAM
income_hist = clean %>% filter(., Year==2015, Income.Group=='High income') %>%
group_by(., Income.Group) %>%
ggplot(., aes(x=Share.Consumption)) +
geom_histogram(bins=8) +
theme_bw()
ggplotly(income_hist)
## With gather()... legend gets name of variable.
access_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Total' | measure=='Rural' | measure=='Urban') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() +
scale_color_manual(name="",
labels = c("Rural", "Total", "Urban"),
values = c("Rural"="blue", "Total"="black", "Urban"="red"))
ggplotly(access_ot)
## With gather()... legend gets name of variable.
access_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="Pop", value="Percent", 4:17) %>%
filter(., Pop=='Total' | Pop=='Rural' | Pop=='Urban') %>%
ggplot(., aes(x=Year, y=Percent, color=Pop)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() +
scale_color_manual(name="",
labels = c("Rural", "Total", "Urban"),
values = c("Rural"="blue", "Total"="black", "Urban"="red"))
ggplotly(access_ot)
clean = read.csv("./data/Energy/clean8.csv")
setwd("~/Desktop/School Stuff/NYCDSA/7. Projects/Shiny/shiny_git")
clean = read.csv("./data/Energy/clean8.csv")
clean = read.csv("./data/Energy/clean8.csv")
runApp()
clean %>% filter(., Year==2015) %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=900, backgroundColor='darkgray'))
runApp()
?radioButtons
?sliderInput
runApp()
?selectizeInput
runApp()
clean %>% filter(., Country=='Brazil') %>%
gather(., key="Pop", value="Percent", 4:17) %>%
filter(., Pop=='Total' | Pop=='Rural' | Pop=='Urban') %>%
ggplot(., aes(x=Year, y=Percent, color=Pop)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() +
scale_color_manual(name="",
labels = c("Rural", "Total", "Urban"),
values = c("Rural"="blue", "Total"="black", "Urban"="red"))
## With gather()... legend gets name of variable.
access_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="Pop", value="Percent", 4:17) %>%
filter(., Pop=='Total' | Pop=='Rural' | Pop=='Urban') %>%
ggplot(., aes(x=Year, y=Percent, color=Pop)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() +
scale_color_manual(name="",
labels = c("Rural", "Total", "Urban"),
values = c("Rural"="blue", "Total"="black", "Urban"="red"))
ggplotly(access_ot)
## With gather()... legend gets name of variable.
access_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="Pop", value="Percent", 5:18) %>%
filter(., Pop=='Total' | Pop=='Rural' | Pop=='Urban') %>%
ggplot(., aes(x=Year, y=Percent, color=Pop)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() +
scale_color_manual(name="",
labels = c("Rural", "Total", "Urban"),
values = c("Rural"="blue", "Total"="black", "Urban"="red"))
ggplotly(access_ot)
runApp()
## Both
# With gather()... legend gets name of variable.
gdp_urban_ot = clean %>% filter(., Country=="Brazil") %>%
select(., Year, GDP.PC, Urban) %>%
mutate(., `GDP PC Scaled`=rescale(GDP.PC)*100) %>%
gather(., key="measure", value="value", 2:4) %>%
filter(., measure=='GDP PC Scaled' | measure=='Urban') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
theme_bw()
ggplotly(gdp_urban_ot)
runApp()
?ggplotly
runApp()
runApp()
runApp()
runApp()
<geom_bar()
?geom_bar
?geom_bar
runApp()
?plot_ly
runApp()
runApp()
?sliderInput
runApp()
runApp()
runApp()
runApp()
new = read.csv('./data/Energy/clean9.csv')
View(new)
new = select(new, Subregion, Country)
joined = left_join(new, clean, by="Country")
View(joined)
new = new %>% group_by(., Country, Subregion)
new = unique(new)
joined = right_join(clean, new, by="Country")
setwd("~/Desktop/School Stuff/NYCDSA/7. Projects/Shiny/shiny_git/data/Energy")
write.csv(clean, "clean10.csv")
## 2. REGIONAL MAPS!!
region_map = clean %>% filter(., Year==2015, Region=='Caribbean') %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800, region='005'))
plot(region_map)
## 2. REGIONAL MAPS!!
region_map = clean %>% filter(., Year==2015, Subregion=='Caribbean') %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800, region='029'))
plot(region_map)
## 2. REGIONAL MAPS!!
region_map = clean %>% filter(., Year==2015, Subregion=='Caribbean') %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800, region='029'))
clean = joined
# Renewable Consumption Top 10
clean %>% filter(., Year==2015) %>%
select(., Country, Share.Consumption, Renewable.Consumption) %>%
arrange(desc(Renewable.Consumption)) %>%
head(10)
## 2. REGIONAL MAPS!!
region_map = clean %>% filter(., Year==2015, Subregion=='Caribbean') %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800, region='029'))
plot(region_map)
write.csv(clean, "clean10.csv")
## 2. REGIONAL MAPS!!
region_map = clean %>% filter(., Year==2015, Subregion=='Western Europe') %>%
gvisGeoChart(., locationvar='Country', colorvar='Share.Output',
options=list(height=500,width=800, region='155'))
plot(region_map)
clean = read.csv("./data/Energy/clean8.csv")
setwd("~/Desktop/School Stuff/NYCDSA/7. Projects/Shiny/shiny_git")
clean = read.csv("./data/Energy/clean8.csv")
View(clean)
new = read.csv("./data/Energy/clean9.csv")
View(new)
new = new %>% select(., Code, Subregion)
new = new %>% unique(., Code, Subregion)
?unique
new = new %>% unique(new)
new = new %>% group_by(., Code, Subregion) %>% summarise(., unique())
new = new %>% group_by(., Code, Subregion)
?unique()
unique(new)
new = unique(new)
joined = right_join(clean, new, by="Code")
View(joined)
clean=joined
setwd("~/Desktop/School Stuff/NYCDSA/7. Projects/Shiny/shiny_git/data/Energy")
write.csv(clean, "clean10.csv")
runApp('~/Desktop/School Stuff/NYCDSA/7. Projects/Shiny/shiny_git')
Subregion = ["Northern Africa","Western Africa","Middle Africa","Eastern Africa","Southern Africa","Northern Europe","Western Europe","Eastern Europe","Southern Europe","Northern America","Caribbean","Central America","South America","Central Asia","Eastern Asia","Southern Asia","South-Eastern Asia","Western Asia","Oceania"]
Subregion = c("Northern Africa","Western Africa","Middle Africa","Eastern Africa","Southern Africa","Northern Europe","Western Europe","Eastern Europe","Southern Europe","Northern America","Caribbean","Central America","South America","Central Asia","Eastern Asia","Southern Asia","South-Eastern Asia","Western Asia","Oceania")
Region.Code = c("015","011","017","014","018","154","155","151","039","021","029","013","005","143","030","034","035","145","009")
length(Region.Code)
?data.frame
data.frame(Subregion=Subregion,Region.Code=Region.Code)
new = data.frame(Subregion=Subregion,Region.Code=Region.Code)
joined = left_join(clean, new, by="Subregion")
View(joined)
clean=joined
setwd("~/Desktop/School Stuff/NYCDSA/7. Projects/Shiny/shiny_git/data/Energy")
sum(is.null(clean$Region.Code))
write.csv(clean, "clean10.csv")
runApp('~/Desktop/School Stuff/NYCDSA/7. Projects/Shiny/shiny_git')
clean = read.csv("./data/Energy/clean10.csv")
setwd("~/Desktop/School Stuff/NYCDSA/7. Projects/Shiny/shiny_git")
clean = read.csv("./data/Energy/clean10.csv")
runApp()
clean = read.csv("./data/Energy/clean10.csv")
clean = read.csv("./data/Energy/clean10.csv")
clean$X.1=NULL
runApp()
clean$X.1=NULL
clean$X.1=NULL
runApp()
runApp()
runApp()
clean[clean$Subregion==input$region_region,] %>% select(., Region.Code)[1]
clean[clean$Subregion=="Western Europe",22] %>% filter(., 1)
clean[clean$Subregion=="Western Europe",22] #%>% filter(., 1)
clean[clean$Subregion=="Western Europe",22][1] #%>% filter(., 1)
runApp()
clean[clean$Subregion=="Western Europe",clean$Subregion][1] #%>% filter(., 1)
clean[clean$Subregion=="Western Europe",22][1] #%>% filter(., 1)
class(clean[clean$Subregion=="Western Europe",22][1]) #%>% filter(., 1)
class(as.character(clean[clean$Subregion=="Western Europe",22][1])) #%>% filter(., 1)
runApp()
class(as.character(clean[clean$Subregion=="Southern Asia",22][1])) #%>% filter(., 1)
class(as.character(clean[clean$Subregion=="Southern Asia",22][1])) #%>% filter(., 1)
as.character(clean[clean$Subregion=="Southern Asia",22][1]) #%>% filter(., 1)
runApp()
clean[clean$Subregion=="Southern Asia",22][1]
length(clean[clean$Subregion=="Southern Asia",22][1])
as.character(0) + as.character(clean[clean$Subregion=="Southern Asia",22][1])
as.character(0) & as.character(clean[clean$Subregion=="Southern Asia",22][1])
paste(as.character(0) & as.character(clean[clean$Subregion=="Southern Asia",22][1]))
paste(as.character(0), as.character(clean[clean$Subregion=="Southern Asia",22][1]))
paste(as.character(0), as.character(clean[clean$Subregion=="Southern Asia",22][1]), sep="")
runApp()
runApp()
shiny::runApp()
library(plotly)
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(shiny)
library(shinythemes)
clean = read.csv("./data/Energy/clean10.csv")
View(clean)
clean = read.csv("./data/Energy/clean10.csv")
clean$X.1=NULL
View(clean)
runApp()
library(googleVis)
library(tidyverse)
library(scales)
runApp()
runApp()
runApp()
