sum(is.na(joined$Region))
joined %>% filter(., is.na(Region)==T)
joined %>% filter(., is.na(Region)==T) %>% select(., name)
joined2 = left_join(slim, meta, by="code")
sum(is.na(joined2$Region))
sum(is.na(joined$Region))
joined2 %>% filter(., is.na(Region)==T) %>% select(., name)
joined2 %>% filter(., is.na(Region)==T) %>% select(., name.x)
joined3 = joined2 %>% filter(., is.na(Region)==F)
View(joined3)
joined3$type = NULL
joined3$name.y = NULL
joined3$SpecialNotes = NULL
joined3$X6 = NULL
joined3$access_for_cooking = NULL
joined3 = joined3 %>% mutate(., scaled=rescale(pcgdp)*100)
gdp_urban_ot = joined3 %>% filter(., name.x=="Brazil") %>%
ggplot() +
geom_line(aes(x=year, y=scaled, color='blue')) +
geom_line(aes(x=year, y=urban_pop, color="red")) +
scale_color_identity(name='',
breaks=c("blue","red"),
labels=c("PCGDP Scaled","Urban Pop %"),
guide = "legend") +
ylim(0,100) +
theme_bw()
ggplotly(gdp_urban_ot)
## PC GDP & Urban Pop % over time
# With normal table... legend gets messed up.
gdp_urban_ot = clean %>% filter(., name=="Brazil") %>%
mutate(., scaled=rescale(pcgdp)*100) %>%
ggplot() +
geom_line(aes(x=year, y=scaled, color='blue')) +
geom_line(aes(x=year, y=urban_pop, color="red")) +
scale_color_identity(name='',
breaks=c("blue","red"),
labels=c("PCGDP Scaled","Urban Pop %"),
guide = "legend") +
ylim(0,100) +
theme_bw()
ggplotly(gdp_urban_ot)
gdp_urban_ot = joined3 %>% filter(., name.x=="Brazil") %>%
ggplot() +
geom_line(aes(x=year, y=scaled, color='blue')) +
geom_line(aes(x=year, y=urban_pop, color="red")) +
scale_color_identity(name='',
breaks=c("blue","red"),
labels=c("PCGDP Scaled","Urban Pop %"),
guide = "legend") +
ylim(0,100) +
theme_bw()
ggplotly(gdp_urban_ot)
joined3 = joined3 %>% mutate(., scaled=rescale(pcgdp)*1000)
gdp_urban_ot = joined3 %>% filter(., name.x=="Brazil") %>%
ggplot() +
geom_line(aes(x=year, y=scaled, color='blue')) +
geom_line(aes(x=year, y=urban_pop, color="red")) +
scale_color_identity(name='',
breaks=c("blue","red"),
labels=c("PCGDP Scaled","Urban Pop %"),
guide = "legend") +
ylim(0,100) +
theme_bw()
ggplotly(gdp_urban_ot)
joined3 = joined3 %>% mutate(., scaled=rescale(pcgdp)*10000)
gdp_urban_ot = joined3 %>% filter(., name.x=="Brazil") %>%
ggplot() +
geom_line(aes(x=year, y=scaled, color='blue')) +
geom_line(aes(x=year, y=urban_pop, color="red")) +
scale_color_identity(name='',
breaks=c("blue","red"),
labels=c("PCGDP Scaled","Urban Pop %"),
guide = "legend") +
ylim(0,100) +
theme_bw()
ggplotly(gdp_urban_ot)
joined2 = clean %>% mutate(., scaled=rescale(pcgdp)*100)
gdp_urban_ot = joined2 %>% filter(., name.x=="Brazil") %>%
ggplot() +
geom_line(aes(x=year, y=scaled, color='blue')) +
geom_line(aes(x=year, y=urban_pop, color="red")) +
scale_color_identity(name='',
breaks=c("blue","red"),
labels=c("PCGDP Scaled","Urban Pop %"),
guide = "legend") +
ylim(0,100) +
theme_bw()
gdp_urban_ot = joined2 %>% filter(., name=="Brazil") %>%
ggplot() +
geom_line(aes(x=year, y=scaled, color='blue')) +
geom_line(aes(x=year, y=urban_pop, color="red")) +
scale_color_identity(name='',
breaks=c("blue","red"),
labels=c("PCGDP Scaled","Urban Pop %"),
guide = "legend") +
ylim(0,100) +
theme_bw()
ggplotly(gdp_urban_ot)
joined3$scaled = NULL
colnames(joined3) = c("Country", "Code", "Year", "Rural", "Total", "Urban", "Intensity", "Renewable Output", "Share Output", "Renewable Consumption", "Share Consumption", "Total Output", "Total Consumption", "Population", "GDP", "GDP PC", "Urban Population", "Region", "Income Group")
# With gather()... legend gets name of variable.
access_ot = clean %>% filter(., name=='Brazil') %>%
gather(., key="measure", value="value", 5:19) %>%
filter(., measure=='access_total' | measure=='access_rural' | measure=='access_urban') %>%
ggplot(., aes(x=year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() +
scale_color_manual(name="",
labels = c("Rural", "Total", "Urban"),
values = c("access_rural"="blue", "access_total"="black", "access_urban"="red"))
ggplotly(access_ot)
# With gather()... legend gets name of variable.
access_ot = joined3 %>% filter(., name=='Brazil') %>%
gather(., key="measure", value="value", 5:19) %>%
filter(., measure=='access_total' | measure=='access_rural' | measure=='access_urban') %>%
ggplot(., aes(x=year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() +
scale_color_manual(name="",
labels = c("Rural", "Total", "Urban"),
values = c("access_rural"="blue", "access_total"="black", "access_urban"="red"))
ggplotly(access_ot)
# With gather()... legend gets name of variable.
access_ot = joined3 %>% filter(., name=='Brazil') %>%
gather(., key="measure", value="value", 5:19) %>%
filter(., measure=='access_total' | measure=='access_rural' | measure=='access_urban') %>%
ggplot(., aes(x=year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw()
ggplotly(access_ot)
# With gather()... legend gets name of variable.
access_ot = joined3 %>% filter(., name=='Brazil') %>%
gather(., key="measure", value="value", 5:19) %>%
filter(., measure=='Total' | measure=='Rural' | measure=='Urban') %>%
ggplot(., aes(x=year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() +
scale_color_manual(name="",
labels = c("Rural", "Total", "Urban"),
values = c("access_rural"="blue", "access_total"="black", "access_urban"="red"))
ggplotly(access_ot)
# With gather()... legend gets name of variable.
access_ot = joined3 %>% filter(., name=='Brazil') %>%
gather(., key="measure", value="value", 5:19) %>%
filter(., measure=='Total' | measure=='Rural' | measure=='Urban') %>%
ggplot(., aes(x=year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw()
# With gather()... legend gets name of variable.
access_ot = joined3 %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 5:19) %>%
filter(., measure=='Total' | measure=='Rural' | measure=='Urban') %>%
ggplot(., aes(x=year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw()
ggplotly(access_ot)
# With gather()... legend gets name of variable.
access_ot = joined3 %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 5:19) %>%
filter(., measure=='Total' | measure=='Rural' | measure=='Urban') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw()
ggplotly(access_ot)
# With gather()... legend gets name of variable.
access_ot = clean %>% filter(., name=='Brazil') %>%
gather(., key="measure", value="value", 5:19) %>%
filter(., measure=='access_total' | measure=='access_rural' | measure=='access_urban') %>%
ggplot(., aes(x=year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() +
scale_color_manual(name="",
labels = c("Rural", "Total", "Urban"),
values = c("access_rural"="blue", "access_total"="black", "access_urban"="red"))
ggplotly(access_ot)
write_csv(joined3, "./data/Energy/clean6.csv")
clean = read.csv("./data/Energy/clean.csv")
clean = read.csv("./data/Energy/clean6.csv")
## PC GDP over time
pcgdp_ot = clean %>% filter(., name=="Brazil") %>%
ggplot(aes(x=year, y=pcgdp)) +
geom_line()
## PC GDP over time
pcgdp_ot = clean %>% filter(., Name=="Brazil") %>%
ggplot(aes(x=Year, y=GDP.PC)) +
geom_line()
## PC GDP over time
pcgdp_ot = clean %>% filter(., Country=="Brazil") %>%
ggplot(aes(x=Year, y=GDP.PC)) +
geom_line()
ggplotly(pcgdp_ot)
## Urban Pop % over time
urban_pop_ot = clean %>% filter(., Country=="Brazil") %>%
ggplot(aes(x=Year, y=Urban)) +
geom_line() +
ylim(0,100)
ggplotly(urban_pop_ot)
## PC GDP & Urban Pop % over time
# With normal table... legend gets messed up.
gdp_urban_ot = clean %>% filter(., Country=="Brazil") %>%
mutate(., scaled=rescale(GDP.PC)*100) %>%
ggplot() +
geom_line(aes(x=Year, y=scaled, color='blue')) +
geom_line(aes(x=Year, y=Urban, color="red")) +
scale_color_identity(name='',
breaks=c("blue","red"),
labels=c("GDP PC Scaled","Urban Pop %"),
guide = "legend") +
ylim(0,100) +
theme_bw()
ggplotly(gdp_urban_ot)
ggplotly(urban_pop_ot)
# With gather()... legend gets name of variable.
gdp_urban_ot = clean %>% filter(., Country=="Brazil") %>%
select(., Year, GDP.PC, Urban) %>%
mutate(., scaled=rescale(GDP.PC)*100) %>%
gather(., key="measure", value="value", 2:4) %>%
filter(., measure=='scaled' | measure=='Urban') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
theme_bw()
ggplotly(gdp_urban_ot)
# With gather()... legend gets name of variable.
gdp_urban_ot = clean %>% filter(., Country=="Brazil") %>%
select(., Year, GDP.PC, Urban) %>%
mutate(., GDP PC Scaled=rescale(GDP.PC)*100) %>%
gather(., key="measure", value="value", 2:4) %>%
filter(., measure=='GDP PC Scaled' | measure=='Urban') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
theme_bw()
ggplotly(gdp_urban_ot)
# With gather()... legend gets name of variable.
gdp_urban_ot = clean %>% filter(., Country=="Brazil") %>%
select(., Year, GDP.PC, Urban) %>%
mutate(., `GDP PC Scaled`=rescale(GDP.PC)*100) %>%
gather(., key="measure", value="value", 2:4) %>%
filter(., measure=='GDP PC Scaled' | measure=='Urban') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
theme_bw()
ggplotly(gdp_urban_ot)
## Access to Electricity over time (country)
# With normal table... legend gets messed up.
access_ot = clean %>% filter(., Country=='Brazil') %>%
ggplot() +
geom_line(aes(x=Year,y=Total, color='black')) +
geom_line(aes(x=Year,y=Rural, color='blue')) +
geom_line(aes(x=Year,y=Urban, color='red')) +
scale_color_identity(name='Population',
breaks=c("black","blue","red"),
labels=c("Total","Rural","Urban"),
guide = "legend") +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw()
ggplotly(access_ot)
# With gather()... legend gets name of variable.
access_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Total' | measure=='Rural' | measure=='Urban') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() +
scale_color_manual(name="",
labels = c("Rural", "Total", "Urban"),
values = c("Rural"="blue", "Total"="black", "Urban"="red"))
ggplotly(access_ot)
# With gather()... legend gets name of variable.
access_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Total' | measure=='Rural' | measure=='Urban') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() #+
ggplotly(access_ot)
# With gather()... legend gets name of variable.
access_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Total' | measure=='Rural' | measure=='Urban') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() +
scale_color_manual(name="",
labels = c("Rural", "Total", "Urban"),
values = c("Rural"="blue", "Total"="black", "Urban"="red"))
ggplotly(access_ot)
# With plotly...
c <- clean %>% filter(., Name=='Brazil') %>% plot_ly(., x = ~Year, y = ~Total, type = 'scatter', mode = 'lines', name = 'Total')
c <- b %>% add_trace(y = ~Rural, name = 'Rural')
c <- b %>% add_trace(y = ~Urban, name = 'Urban')
c
## Renewable Share Output over time
renewable_share_out_ot = clean %>% filter(., Country=='Brazil') %>%
ggplot(., aes(x=Year,y=Share.Output)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share of Energy Output (%)") +
xlab("Year") +
theme_bw()
ggplotly(renewable_share_out_ot)
## Renewable Share TFEC over time
renewable_share_TFEC_ot = clean %>% filter(., Country=='Brazil') %>%
ggplot(., aes(x=Year,y=Share.Consumption)) +
geom_line()+
ylim(0,100) +
ylab("Renewable Share of Energy Consumption (%)") +
xlab("Year") +
theme_bw()
ggplotly(renewable_share_TFEC_ot)
# Renewable Share Output and TFEC over time
# With gather()... legend gets name of variable.
renewable_share_both_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share Output' | measure=='Share Counsumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share (%)") +
theme_bw()
ggplotly(renewable_share_both_ot)
# Renewable Share Output and TFEC over time
# With gather()... legend gets name of variable.
renewable_share_both_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share Output' | measure=='Share Consumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share (%)") +
theme_bw()
ggplotly(renewable_share_both_ot)
# Renewable Share Output and TFEC over time
# With gather()... legend gets name of variable.
renewable_share_both_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share Output' | measure=='Share Consumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share (%)") +
theme_bw()
ggplotly(renewable_share_both_ot)
# Renewable Share Output and TFEC over time
# With gather()... legend gets name of variable.
renewable_share_both_ot =
clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share Output' | measure=='Share Consumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share (%)") +
theme_bw()
# Renewable Share Output and TFEC over time
# With gather()... legend gets name of variable.
renewable_share_both_ot =
clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share Output' | measure=='Share Consumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share (%)") +
theme_bw()
# Renewable Share Output and TFEC over time
# With gather()... legend gets name of variable.
renewable_share_both_ot =
clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share Output' | measure=='Share Consumption') %>%
ggplot(aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share (%)") +
theme_bw()
clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share Output' | measure=='Share Consumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share (%)") +
theme_bw()
clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share.Output' | measure=='Share.Consumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share (%)") +
theme_bw()
ggplotly(renewable_share_both_ot)
# With gather()... legend gets name of variable.
access_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Total' | measure=='Rural' | measure=='Urban') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("% of Pop w/ Electricity Access") +
xlab("Year") +
theme_bw() +
scale_color_manual(name="",
labels = c("Ruralllll", "Total", "Urban"),
values = c("Rural"="blue", "Total"="black", "Urban"="red"))
ggplotly(access_ot)
clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share.Output' | measure=='Share.Consumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share (%)") +
theme_bw()
ggplotly(renewable_share_both_ot)
clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share.Output' | measure=='Share Consumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share (%)") +
theme_bw()
# Renewable Share Output and TFEC over time
# With gather()... legend gets name of variable.
renewable_share_both_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share.Output' | measure=='Share Consumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share (%)") +
theme_bw()
ggplotly(renewable_share_both_ot)
# Renewable Share Output and TFEC over time
# With gather()... legend gets name of variable.
renewable_share_both_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share.Output' | measure=='Share.Consumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share (%)") +
theme_bw()
ggplotly(renewable_share_both_ot)
# Renewable Share Output and TFEC over time
# With gather()... legend gets name of variable.
renewable_share_both_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share.Output' | measure=='Share.Consumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share of Total Energy (%)") +
theme_bw()
ggplotly(renewable_share_both_ot)
clean = clean %>% filter(., Year<2016)
View(clean)
write_csv(clean, "./data/Energy/clean7.csv")
clean = read.csv("./data/Energy/clean7.csv")
clean = read.csv("./data/Energy/clean7.csv")
runApp()
# Renewable Share over time
# With gather()... legend gets name of variable.
renewable_share_both_ot = clean %>% filter(., Country=='Brazil') %>%
gather(., key="measure", value="value", 4:17) %>%
filter(., measure=='Share.Output' | measure=='Share.Consumption') %>%
ggplot(., aes(x=Year, y=value, color=measure)) +
geom_line() +
ylim(0,100) +
ylab("Renewable Share of Total Energy (%)") +
theme_bw()
ggplotly(renewable_share_both_ot)
runApp()
