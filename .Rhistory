layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf <- readOGR(
dsn= paste0(getwd(),"./data/world_shape_file/") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf <- readOGR(
dsn= paste0(getwd(),"./data/world_shape_file/") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf <- readOGR(
dsn= paste0(getwd(),"./data/world_shape_file/") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/world_shape_file/") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf@data$POP2005[ which(world_spdf@data$POP2005 == 0)] = NA
world_spdf@data$POP2005 <- as.numeric(as.character(world_spdf@data$POP2005)) / 1000000 %>% round(2)
library(leaflet)
# Create a color palette for the map:
mypalette <- colorNumeric( palette="viridis", domain=world_spdf@data$POP2005, na.color="transparent")
mypalette(c(45,43))
# Basic choropleth with leaflet?
m <- leaflet(world_spdf) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons( fillColor = ~mypalette(POP2005), stroke=FALSE )
m
POP2005
View(world_spdf)
runApp()
?maps
install.packages("maps")
?maps
help(package = "maps")
library(maps)
counties = map_data("county")
map_data()
countries = map_data("worldMapEnv")
countries = map_data("worldMapEnv")
countries = map_data("county")
countries = map_data("world")
ggplot(data = countries, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = group))
View(countries)
ggplot(data = countries, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = group)) +
theme_bw()
ggplot() +
geom_polygon(data = world_spdf, aes(fill = clean$Renewable.Output, x = long, y = lat, group = group)) +
theme_void() +
coord_map()
ggplot() +
geom_polygon(data = world_spdf, aes(fill = Renewable.Output, x = long, y = lat, group = group)) +
theme_void() +
coord_map()
ggplot() +
geom_polygon(data = world_spdf, aes( x = long, y = lat, group = group)) +
theme_void() +
coord_map()
m <- leaflet(world_spdf) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons( fillColor = ~mypalette(POP2005), stroke=FALSE )
m
# Create a color palette for the map:
mypalette <- colorNumeric( palette="viridis", domain=clean$POP2005, na.color="transparent")
mypalette(c(45,43))
# Basic choropleth with leaflet?
m <- leaflet(world_spdf) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons( fillColor = ~mypalette(POP2005), stroke=FALSE )
m
# Create a color palette for the map:
mypalette <- colorNumeric( palette="viridis", domain=clean$Renewable.Output, na.color="transparent")
mypalette(c(45,43))
# Basic choropleth with leaflet?
m <- leaflet(world_spdf) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons( fillColor = ~mypalette(Renewable.Output), stroke=FALSE )
# Basic choropleth with leaflet?
m <- leaflet(world_spdf) %>%
addTiles()  %>%
setView( lat=10, lng=0 , zoom=2) %>%
addPolygons( fillColor = ~mypalette(clean$Renewable.Output), stroke=FALSE )
m
ggplot() +
geom_polygon(data = world_spdf, aes( x = long, y = lat, group = group)) +
theme_void() +
coord_map()
ggplot() +
geom_polygon(data = world_spdf, aes( x = long, y = lat, group = group)) +
theme_void() +
coord_map()
ggplot(data = countries, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = group)) +
theme_bw()
?left_join
View(clean)
ggmap = left_join(countries, clean, by=c("region"="Country"))
View(ggmap)
ggmap = left_join(countries, filter(clean, Year==2015), by=c("region"="Country"))
View(ggmap)
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Renewable.Output)) +
theme_bw()
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
theme_bw()
cleancopy = clean
cleancopy$Country = as.character(clean$Country)
clean[clean$Code=="USA", ] = clean %>% filter(., Code=="USA") %>% mutate(., Country="USA")
cleancopy[cleancopy$Code=="USA", ] = cleancopy %>% filter(., Code=="USA") %>% mutate(., Country="USA")
clean = read.csv("./data/Energy/clean10.csv")
clean$X.1=NULL
ggmap = left_join(countries, filter(cleancopy, Year==2015), by=c("region"="Country"))
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
theme_bw()
ggplot(data=cleancopy) +
geom_map(map =countries, aes(map_id=Country, fill=Share.Output), color='gray40') +
expand_limits(x=map$long, y=map$lat) +
scale_fill_continuous(high='green2', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) +
coord_map('mercator') +
labs(title='Number of Murders Country-wide in 1973')
ggplot(data=cleancopy) +
geom_map(map = countries, aes(map_id=Country, fill=Share.Output), color='gray40') +
expand_limits(x=countries$long, y=map$lat) +
scale_fill_continuous(high='green2', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) +
coord_map('mercator') +
labs(title='Number of Murders Country-wide in 1973')
ggplot(data=cleancopy) +
geom_map(map = countries, aes(map_id=Country, fill=Share.Output), color='gray40') +
expand_limits(x=countries$long, y=countries$lat) +
scale_fill_continuous(high='green2', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) +
coord_map('mercator') +
labs(title='Number of Murders Country-wide in 1973')
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
theme_bw()
ggplot(data=cleancopy) +
geom_map(map = countries, aes(map_id=Country, fill=Share.Output), color='gray40') +
expand_limits(x=countries$long, y=countries$lat) +
scale_fill_continuous(high='green2', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) +
coord_map('mercator') +
labs(title='Number of Murders Country-wide in 1973')
ggplot(data=cleancopy) +
geom_map(map = countries, aes(map_id=Country, fill=Share.Output), color='gray40') +
expand_limits(x=countries$long, y=countries$lat) +
scale_fill_continuous(high='green', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) +
coord_map('mercator') +
labs(title='Number of Murders Country-wide in 1973')
ggplot(data=cleancopy) +
geom_map(map = countries, aes(map_id=Country, fill=Share.Output), color='gray40') +
expand_limits(x=countries$long, y=countries$lat) +
scale_fill_continuous(high='darkgreen', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) +
coord_map('mercator') +
labs(title='Number of Murders Country-wide in 1973')
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
theme_bw()
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) +
coord_map('mercator')
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
theme_bw() +
theme(#panel.grid.major = element_blank(),
#panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) +
coord_map('mercator')
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) #+
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
scale_fill_continuous(high='darkgreen', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) #+
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
#  scale_fill_continuous(high='darkgreen', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) #+
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
scale_fill_brewer(palette = "Greens") +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) #+
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
scale_fill_brewer(palette = "Blues",
name = "Population",
labels = c("0 - 9", "10 - 19",
"10,000 - 99,999", "100,000 - 999,999",
"1,000,000+")) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) #+
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
scale_fill_continuous(high='green', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) #+
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
scale_fill_continuous(high='darkgreen', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) #+
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
scale_fill_continuous(high='darkgreen', low='gray') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) #+
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
scale_fill_continuous(high='darkgreen', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) #+
ggplot(data = ggmap, aes(x = long, y = lat)) +
geom_polygon(aes(group = group, fill = Share.Output)) +
scale_fill_continuous(high='darkgreen', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) +
coord_map('mercator')
ggplot(data=cleancopy) +
geom_map(map = countries, aes(map_id=Country, fill=Share.Output), color='gray40') +
expand_limits(x=countries$long, y=countries$lat) +
scale_fill_continuous(high='darkgreen', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) +
coord_map('mercator') +
labs(title='Number of Murders Country-wide in 1973')
ggplot(data=cleancopy) +
geom_map(map = countries, aes(map_id=Country, fill=Share.Output), color='gray40') +
#expand_limits(x=countries$long, y=countries$lat) +
scale_fill_continuous(high='darkgreen', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) +
coord_map('mercator') +
labs(title='Number of Murders Country-wide in 1973')
ggplot(data=cleancopy) +
geom_map(map = countries, aes(map_id=Country, fill=Share.Output), color='gray40') +
expand_limits(x=countries$long, y=countries$lat) +
scale_fill_continuous(high='darkgreen', low='white') +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.background = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
legend.position = c(0.95,0.28),
legend.background=element_rect(fill="white", colour="white") ) +
coord_map('mercator') +
labs(title='Number of Murders Country-wide in 1973')
library(plotly)
library(rjson)
install.packages("rjson")
fig <- plot_ly(df, type='choropleth', locations=clean$Code, z=clean$Share.Output, text=clean$Country, colorscale="Blues")
fig <- plot_ly(clean, type='choropleth', locations=clean$Code, z=clean$Share.Output, text=clean$Country, colorscale="Blues")
fig
clean %>% filter(., Year==2015) %>% plot_ly(., type='choropleth', locations=clean$Code, z=clean$Share.Output, text=clean$Country, colorscale="Blues")
clean %>% filter(., Year==2015) %>%
plot_ly(., type='choropleth', locations=clean$Code, z=clean$Share.Output,
text=clean$Country, colorscale="Greens")
clean %>% filter(., Year==2015)
clean %>% filter(., Year==2015, Country=="Brazil")
clean %>% filter(., Year==2015) %>%
plot_ly(., type='choropleth', locations=Code, z=Share.Output,
text=Country, colorscale="Greens")
clean1 %>% filter(., Year==2015)
clean1 = clean %>% filter(., Year==2015)
plot_ly(clean1, type='choropleth', locations=Code, z=Share.Output,
text=Country, colorscale="Greens")
plot_ly(data=clean1, type='choropleth', locations=Code, z=Share.Output,
text=Country, colorscale="Greens")
plot_ly(data=clean1, type='choropleth', locations=clean1$Code, z=clean1$Share.Output,
text=clean1$Country, colorscale="Greens")
runApp()
runApp()
runApp()
runApp()
runApp()
plot_geo(clean1) %>%
add_trace(z = clean1$Share.Output, color = clean1$Share.Output,
colors = 'Blues',
text = clean1$Country,
locations = clean1$Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = 'GDP Billions US$', tickprefix = '$') %>%
layout(geo = list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
))
plot_geo(clean1) %>%
add_trace(z = clean1$Share.Output, color = clean1$Share.Output,
colors = 'Blues',
text = clean1$Country,
locations = clean1$Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '% Renewable Energy', ticksuffix = '%') %>%
layout(geo = list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
))
plot_ly(data=clean1, type='choropleth', locations=clean1$Code, z=clean1$Share.Output,
text=clean1$Country, colorscale="Greens")
plot_geo(clean1) %>%
add_trace(z = clean1$Share.Output, color = clean1$Share.Output,
colors = 'Blues',
text = clean1$Country,
locations = clean1$Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '% Renewable Energy', ticksuffix = '%') %>%
layout(geo = list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
))
plot_geo(clean1) %>%
add_trace(z = clean1$Share.Output, color = clean1$Share.Output,
colors = 'Greens',
text = clean1$Country,
locations = clean1$Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '% Renewable Energy', ticksuffix = '%') %>%
layout(geo = list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
))
runApp()
runApp()
plot_geo(clean1) %>%
add_trace(z = clean1[, input$worldmap_data], color = clean1[, input$worldmap_data],
colors = 'Greens',
text = clean1$Country,
locations = clean1$Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5)),
height = 500) %>%
colorbar(title = '% Renewable Energy', ticksuffix = '%') %>%
layout(geo = list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
), list(x=100,y=.5))
plot_geo(clean1) %>%
add_trace(z = clean1$Share.Output, color = clean1$Share.Output,
colors = 'Greens',
text = clean1$Country,
locations = clean1$Code,
marker = list(line = list(color = toRGB("grey"), width = 0.5))) %>%
colorbar(title = '% Renewable Energy', ticksuffix = '%') %>%
layout(geo = list(
showframe = FALSE,
showcoastlines = FALSE,
projection = list(type = 'Mercator')
), legend = list(x = 100, y = 0.5))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
